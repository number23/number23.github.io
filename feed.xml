<?xml version='1.0' encoding='UTF-8'?>
<rss version='2.0' xmlns:atom='http://www.w3.org/2005/Atom'>
<channel>
<atom:link href='https://number23.github.io/' rel='self' type='application/rss+xml'/>
<title>
number23
</title>
<link>
https://number23.github.io/
</link>
<description>
an engineer, focus on Clojure/OCaml
</description>
<lastBuildDate>
Fri, 21 Sep 2018 14:36:29 +0800
</lastBuildDate>
<generator>
clj-rss
</generator>
<item>
<guid>
https://number23.github.io/posts-output/2018-09-21-tips-for-curl-command/
</guid>
<link>
https://number23.github.io/posts-output/2018-09-21-tips-for-curl-command/
</link>
<title>
Tips for curl command
</title>
<description>
&lt;h3 id=&quot;1.下载一个文件&quot;&gt;1.下载一个文件&lt;/h3&gt;&lt;p&gt;有两个选项：&lt;code&gt;-O&lt;/code&gt; 和 &lt;code&gt;-o&lt;/code&gt;，(大小写的字母&lt;code&gt;O&lt;/code&gt;, 不是数字&lt;code&gt;0&lt;/code&gt;), 前者获取URL中的文件名用作结果的文件名， 后者可以自定义文件名&lt;/p&gt;&lt;pre&gt;&lt;code&gt;$ curl -O http://yourdomain.com/yourfile.tar.gz # 保存为 yourfile.tar.gz
$ curl -o newfile.tar.gz http://yourdomain.com/yourfile.tar.gz # 保存为 newfile.tar.gz
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;我们可以通过指定URL来一次下载多个文件:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;$ curl -O URL1 -O URL2
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果我们在同一服务器下载多个文件，&lt;code&gt;CRUL&lt;/code&gt;将尝试重新使用该连接。&lt;/p&gt;&lt;h3 id=&quot;2.&amp;#95;使用-l选项跟随&amp;#95;http&amp;#95;位置标头&quot;&gt;2. 使用-L选项跟随 HTTP 位置标头&lt;/h3&gt;&lt;p&gt;有时候一个&lt;code&gt;URL&lt;/code&gt;会被重定向到另外一个，&lt;code&gt;CURL&lt;/code&gt; 默认是不会跟随的，只会返回一个&lt;code&gt;3XX&lt;/code&gt;的重定向&lt;/p&gt;&lt;pre&gt;&lt;code&gt;$ curl http://yourdomain.com


&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;&amp;lt;title&amp;gt;301 Moved Permanently&amp;lt;/title&amp;gt;&amp;lt;/head&amp;gt;
&amp;lt;body bgcolor=&amp;quot;white&amp;quot;&amp;gt;
&amp;lt;center&amp;gt;&amp;lt;h1&amp;gt;301 Moved Permanently&amp;lt;/h1&amp;gt;&amp;lt;/center&amp;gt;
&amp;lt;hr&amp;gt;&amp;lt;center&amp;gt;nginx&amp;lt;/center&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;3.&amp;#95;恢复一个已经中断的下载&quot;&gt;3. 恢复一个已经中断的下载&lt;/h3&gt;&lt;p&gt;如果下载因某种原因中断了(例如，使用&lt;code&gt;Ctrl + c&lt;/code&gt;), 可以使用&lt;code&gt;-C -&lt;/code&gt;从停止的地方开始继续下载。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;$ curl -O http://www.gnu.org/software/gettext/manual/gettext.html 
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  2 1375k    2 40901    0     0  41738      0  0:00:33 --:--:--  0:00:33 41735&amp;#94;C

$ curl -C - -O http://www.gnu.org/software/gettext/manual/gettext.html
&amp;#42;&amp;#42; Resuming transfer from byte position 290816
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100 1091k  100 1091k    0     0   414k      0  0:00:02  0:00:02 --:--:--  414k
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;4.&amp;#95;http身份验证&quot;&gt;4. HTTP身份验证&lt;/h3&gt;&lt;p&gt;有时，网站需要用户名和密码才能查看内容(例如在&lt;code&gt;.htaccess&lt;/code&gt;文件设定的)，在&lt;code&gt;-u&lt;/code&gt;选项的帮助下，我们可以将这些凭据传递到Web服务器，如下所示&lt;/p&gt;&lt;pre&gt;&lt;code&gt;$ curl -u username:password URL
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;默认情况下，使用基本HTTP身份验证。 我们可以使用&lt;code&gt;-ntlm | –digest&lt;/code&gt;指定其他身份验证方法&lt;/p&gt;&lt;h3 id=&quot;5.&amp;#95;从ftp服务器下载文件&quot;&gt;5. 从FTP服务器下载文件&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;$ curl -u username:password -O ftp://yourftpserver/yourfile.tar.gz
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;以上命令将在当前工作目录从&lt;code&gt;ftp://yourftpserver&lt;/code&gt;下载&lt;code&gt;yourfile.tar.gz&lt;/code&gt;， 如果FTP服务器允许匿名登录，您可以跳过&lt;code&gt;-u username:password&lt;/code&gt;。&lt;/p&gt;&lt;h3 id=&quot;6.&amp;#95;上传文件到ftp服务器&quot;&gt;6. 上传文件到FTP服务器&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;$ curl -u username:password -T mylocalfile.tar.gz ftp://yourftpserver
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;还可以使用范围操作同时上载多个文件：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;$ curl -u ftpuser:ftppass -T &amp;quot;{file1,file2}&amp;quot; ftp:/yourftpserver
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;7.&amp;#95;查询&amp;#95;http&amp;#95;消息头&quot;&gt;7. 查询 HTTP 消息头&lt;/h3&gt;&lt;p&gt;HTTP消息头允许远程Web服务器发送有关自身的其他信息以及实际请求，提供了有关如何处理请求的详细信息   &lt;/p&gt;&lt;pre&gt;&lt;code&gt;$ curl -I www.google.com

HTTP/1.1 200 OK
Date: Fri, 21 Sep 2018 05:47:05 GMT
Expires: -1
Cache-Control: private, max-age=0
Content-Type: text/html; charset=ISO-8859-1
P3P: CP=&amp;quot;This is not a P3P policy! See g.co/p3phelp for more info.&amp;quot;
Server: gws
X-XSS-Protection: 1; mode=block
X-Frame-Options: SAMEORIGIN
Set-Cookie: 1P&amp;#95;JAR=2018-09-21-05; path=/; domain=.google.com
Set-Cookie: NID=139=XwjdbwcijthXcvsa4bTuw&amp;#95;mJJj8O5gY8Bc-HvulmzBFTesG-IJ4lIQXxgtGf9cVD1O&amp;#95;A0ePVWWun5x4tQiTtXLnzdFIG9EEFCw0QocNvc&amp;#95;6q7ddAgYJbmTKJ-xwbN3ql; path=/; domain=.google.com; HttpOnly
Transfer-Encoding: chunked
Accept-Ranges: none
Vary: Accept-Encoding
Proxy-Connection: keep-alive
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;8.&amp;#95;使用代理&quot;&gt;8. 使用代理&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;$ curl -x proxy.yourdomain.com:8080 -U user:password -O http://yourdomain.com/yourfile.tar.gz
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果代理服务器允许匿名，您可以跳过&lt;code&gt;-U username:password&lt;/code&gt;。&lt;/p&gt;&lt;h3 id=&quot;9.&amp;#95;提交表单&quot;&gt;9. 提交表单&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;curl --data &amp;quot;firstName=John&amp;amp;lastName=Doe&amp;quot; https://yourdomain.com/info.php
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;以上命令将&lt;code&gt;firstName&lt;/code&gt;和&lt;code&gt;lastName&lt;/code&gt;参数及其对应值发送到&lt;code&gt;https://yourdomain.com/info.php&lt;/code&gt;。&lt;/p&gt;&lt;h3 id=&quot;10.&amp;#95;使用&amp;#95;cookies&quot;&gt;10. 使用 Cookies&lt;/h3&gt;&lt;p&gt;写入 &lt;code&gt;Cookies&lt;/code&gt; 文件：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;$ curl --cookie-jar c.txt https://www.google.com
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;使用 &lt;code&gt;Cookies&lt;/code&gt; 文件：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;$ curl --cookie c.txt https://www.google.com
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;更多参考&lt;a href='https://curl.haxx.se/docs/httpscripting.html'&gt;这里&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>
Fri, 21 Sep 2018 00:00:00 +0800
</pubDate>
</item>
<item>
<guid>
https://number23.github.io/posts-output/2014-09-12-my-clojure-notes/
</guid>
<link>
https://number23.github.io/posts-output/2014-09-12-my-clojure-notes/
</link>
<title>
my clojure notes
</title>
<description>
&lt;ul&gt;&lt;li&gt;let 解构: 顺序集合，map.同时作用于: fn, defn, loop, for etc.   &amp;: rest.   map: :keys, :strs, :syms&lt;/li&gt;&lt;li&gt;Clojure有两个假值：nil, false，任何非nil或非false的值都判断为true．&lt;/li&gt;&lt;li&gt;recur: not autoboxing&lt;/li&gt;&lt;li&gt;reduce: 归约&lt;/li&gt;&lt;li&gt;partial, comp：无参风格，不用显式定义它的参数&lt;/li&gt;&lt;li&gt;memoize: 缓存相同的参数&lt;/li&gt;&lt;li&gt;主要抽象：Collection/Sequence/Associative/Indexed/Stack/Set/Sorted&lt;/li&gt;&lt;li&gt;seq：任何nil 或者任何空集合都返回nil.&lt;/li&gt;&lt;li&gt;rest：(), next: nil&lt;/li&gt;&lt;li&gt;nth：会抛出异常, get: nil,&lt;/li&gt;&lt;li&gt;习惯用法：关键字作为函数&lt;/li&gt;&lt;li&gt;list/vector : hash-set/hash-map&lt;/li&gt;&lt;li&gt;transient: vector/map/set&lt;/li&gt;&lt;li&gt;delay: 只执行一次&lt;/li&gt;&lt;li&gt;future: 在另外一个线程执行&lt;/li&gt;&lt;li&gt;pmap: 并行，用future实现&lt;/li&gt;&lt;li&gt;swap! 会一直重试，直到设值成功&lt;/li&gt;&lt;li&gt;atom不能存在ref里面&lt;/li&gt;&lt;li&gt;meta: ^: or ^{}&lt;/li&gt;&lt;li&gt;前置声明: declare&lt;/li&gt;&lt;li&gt;agent: 串行执行，在一个STM事务里只会执行一次&lt;/li&gt;&lt;li&gt;send: 固定大小的线程池&lt;/li&gt;&lt;li&gt;send-off: 不限制大小的线程池，跟future利用的是同一个线程池，适宜阻塞的(I/O)，非CPU密集型的action&lt;/li&gt;&lt;li&gt;只有在函数满足不了需求的时候才去使用宏&lt;/li&gt;&lt;li&gt;syntax quote: 语法引述: &quot;`&quot;&lt;/li&gt;&lt;li&gt;unquote: 反引过: &quot;~&quot;&lt;/li&gt;&lt;li&gt;splicing-unquote: 编接反引述: &quot;~@&quot;&lt;/li&gt;&lt;li&gt;协议提供的是基于单个参数类型的函数分派&lt;/li&gt;&lt;li&gt;extend / extend-type / extend-protocol&lt;/li&gt;&lt;li&gt;deftype/defrecord:&lt;/li&gt;&lt;li&gt;工厂函数: -&gt;MyType, map-&gt;MyType, MyType/create&lt;/li&gt;&lt;li&gt;require: 从classpath载入命名空间, use: require + refer&lt;/li&gt;&lt;li&gt;如果代码并不包括互操作调用，就没必要包括类型提示, 函数参数或返回值的类型提示都不是类型签名声明&lt;/li&gt;&lt;li&gt;gen-class: 必须AOT&lt;/li&gt;&lt;li&gt;long -&gt; BigInt -&gt; Rationals -&gt; BigDecimal -&gt; double&lt;/li&gt;&lt;/ul&gt;
</description>
<pubDate>
Fri, 12 Sep 2014 00:00:00 +0800
</pubDate>
</item>
<item>
<guid>
https://number23.github.io/posts-output/2011-12-21-exim-on-debian/
</guid>
<link>
https://number23.github.io/posts-output/2011-12-21-exim-on-debian/
</link>
<title>
setup exim on debian
</title>
<description>
&lt;p&gt;我的debian版本：6.0.3，使用系统自带的exim，如果你的系统还没有安装exim，先装这几个包：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;Shell:&amp;#126; &amp;gt;: aptitude search exim | grep '&amp;#94;i'
i   exim4                           - metapackage to ease Exim MTA &amp;#40;v4&amp;#41; installa
i   exim4-base                      - support files for all Exim MTA &amp;#40;v4&amp;#41; packag
i   exim4-config                    - configuration for the Exim MTA &amp;#40;v4&amp;#41;
i   exim4-daemon-light              - lightweight Exim MTA &amp;#40;v4&amp;#41; daemon
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;设置你的/etc/hosts, /etc/resolv.conf&lt;/p&gt;&lt;pre&gt;&lt;code&gt;Shell:&amp;#126; &amp;gt;: cat /etc/resolv.conf
nameserver 127.0.0.1
nameserver 8.8.8.8
nameserver 8.8.4.4
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;可以装一下dnsmasq，避开那些讨厌的dns问题&lt;/p&gt;&lt;pre&gt;&lt;code&gt;Shell:&amp;#126; &amp;gt;: aptitude search dnsmasq | grep '&amp;#94;i'
i   dnsmasq                         - A small caching DNS proxy and DHCP/TFTP se
i A dnsmasq-base                    - A small caching DNS proxy and DHCP/TFTP se
&lt;/code&gt;&lt;/pre&gt;&lt;h5 id=&quot;开始配置&quot;&gt;开始配置&lt;/h5&gt;&lt;p&gt;假设我的域名为：number23.no.de，可以先写在/etc/hosts里， &lt;!&amp;ndash;more&amp;ndash;&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;sudo dpkg-reconfigure exim4-config
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;接下来就是按Enter选择了：&lt;pre&gt;&lt;code&gt;第一个, General type of mail configuration: internet site
第二个, System mail name: number23.no.de
第三个, IP-addresses to listen on for incoming SMTP connections: 空白
第四个, Other destinations for which mail is accepted: localhost.localdomain:localhost:number23.no.de
第五个, Domains to relay mail for: 空白
第六个, Machines to relay mail for: 127.0.0.0/8:192.168.0.0/16:10.0.0.0/8
第七个, Keep number of DNS-queries minimal: No
第八个, Delivery method for local mail: /var/mail
第九个, Split configuration into small files: Yes &lt;/code&gt;&lt;/pre&gt;看看弄出来的配置文件：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;Shell:&amp;#126; &amp;gt;: cat /etc/exim4/update-exim4.conf.conf
dc&amp;#95;eximconfig&amp;#95;configtype='internet'
dc&amp;#95;other&amp;#95;hostnames='localhost.localdomain:localhost:number23.no.de'
dc&amp;#95;local&amp;#95;interfaces=''
dc&amp;#95;readhost=''
dc&amp;#95;relay&amp;#95;domains=''
dc&amp;#95;minimaldns='false'
dc&amp;#95;relay&amp;#95;nets='127.0.0.0/8:192.168.0.0/16:10.0.0.0/8'
dc&amp;#95;smarthost=''
CFILEMODE='644'
dc&amp;#95;use&amp;#95;split&amp;#95;config='true'
dc&amp;#95;hide&amp;#95;mailname=''
dc&amp;#95;mailname&amp;#95;in&amp;#95;oh='true'
dc&amp;#95;localdelivery='mail&amp;#95;spool'
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;启动它：Shell:~ &gt;: sudo /etc/init.d/exim4 start，具体选项详细参考man update-exim4.conf 和exim&lt;a href='http://www.exim.org/exim-html-current/doc/html/spec_html/index.html'&gt;官方文档&lt;/a&gt;。&lt;/p&gt;&lt;h5 id=&quot;优化选项&quot;&gt;优化选项&lt;/h5&gt;&lt;p&gt;在 /etc/exim4/conf.d/main/02&lt;i&gt;exim4-config&lt;/i&gt;options 的最后面加上这些：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;smtp&amp;#95;accept&amp;#95;max=256
smtp&amp;#95;accept&amp;#95;queue&amp;#95;per&amp;#95;connection=0
smtp&amp;#95;accept&amp;#95;queue=128
smtp&amp;#95;accept&amp;#95;reserve=20
deliver&amp;#95;queue&amp;#95;load&amp;#95;max=20
queue&amp;#95;only&amp;#95;load=20
queue&amp;#95;run&amp;#95;max=30
smtp&amp;#95;enforce&amp;#95;sync=false
message&amp;#95;size&amp;#95;limit=20M
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;修改MAIN&lt;i&gt;IGNORE&lt;/i&gt;BOUNCE&lt;i&gt;ERRORS&lt;/i&gt;AFTER， MAIN&lt;i&gt;TIMEOUT&lt;/i&gt;FROZEN_AFTER，&lt;/p&gt;&lt;pre&gt;&lt;code&gt;Shell:/etc/exim4/conf.d/main &amp;gt;: exim4 -bP | grep after
ignore&amp;#95;bounce&amp;#95;errors&amp;#95;after = 1d
timeout&amp;#95;frozen&amp;#95;after = 2d
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&quot;注意&quot;&gt;注意&lt;/h4&gt;&lt;p&gt;如果Split configuration into small files, 选择No的话, 这些修改都不会有效, exim -bP 查看所有选项。&lt;br /&gt; smtp&lt;i&gt;enforce&lt;/i&gt;sync: SMTP同步错误, 参考&lt;a href='http://usneitn.blogspot.com/2009/02/smtp-protocol-synchronization-error.html'&gt;这里&lt;/a&gt;&lt;/p&gt;&lt;h5 id=&quot;qpopper/pop&amp;#95;优化选项&quot;&gt;qpopper/pop 优化选项&lt;/h5&gt;&lt;pre&gt;&lt;code&gt;Shell:&amp;#126; &amp;gt;: grep pop /etc/inetd.conf
##pop-3	stream	tcp	nowait	root	/usr/sbin/tcpd	/usr/sbin/in.qpopper -f /etc/qpopper.conf
pop-3	stream	tcp	nowait.512	root	/usr/sbin/tcpd	/usr/sbin/in.qpopper -F -S -s -R -T 600
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;nowait.512: 每分钟最多可接受的连接请求数目
-F: enable-fast-update
-S: enable-server-mode
-s: status
-R: none dns lookup
-T: timeout&lt;/code&gt;&lt;/pre&gt;
</description>
<pubDate>
Wed, 21 Dec 2011 00:00:00 +0800
</pubDate>
</item>
</channel>
</rss>
